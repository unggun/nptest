type Query {
	businessTypeList: [BusinessTypeOutput] @doc(description: "List of all business type.") @resolver(class: "Icube\\CustomCustomer\\Model\\Resolver\\BusinessTypeList") 

    roadAccessList: [RoadAccessOutput] @doc(description: "List of all road access list.") @resolver(class: "Icube\\CustomCustomer\\Model\\Resolver\\RoadAccessList") 

    checkUserAccount(phoneNumber: String!): CheckUserAccountOutput
        @doc(description: "Check customer WP code.")
        @resolver(class: "Icube\\CustomCustomer\\Model\\Resolver\\CheckUserAccount")
}

type Mutation {
    setCustomerKyc (input: CustomerKycInput): CustomerKycOutput 
    @resolver(class: "Icube\\CustomCustomer\\Model\\Resolver\\Mutation\\SetCustomerKyc")
    @doc(description: "Set customer KYC form.") 

    setCustomerAddressKyc (input: CustomerAddressKycInput) : CustomerKycOutput
    @resolver(class: "Icube\\CustomCustomer\\Model\\Resolver\\Mutation\\SetCustomerAddressKyc")
    @doc(description: "Set Customer Address KYC form.")
}

input CustomerKycInput {
    customer_name: String! @doc(description: "customer full name.")
    no_ktp: String! @doc(description: "customer ktp number.")
    ktp_image: String! @doc(description: "ktp image data.")
    ktp_selfie: String! @doc(description: "ktp selfie data.")
    agreement: Boolean @doc(description: "customer agreement data.")
} 

input CustomerAddressKycInput {
    warung_name: String! @doc(description: "Warung name input.")
    location: AddressInput! @doc(description: "Customer Address input.")
    address_note: String! @doc(description: "Address note detail input.")
    near_store_photo: String! @doc(description: "Store photo from near.")
    road_access: String! @doc(description: "Note road access to the store.")
    front_store_photo: String! @doc(description: "Store photo from front.")
    referral_code: String @doc(description: "Referral Code input.")
    full_address: String @doc(description: "Full Address input.")
}

input CustomerAddressRegionInput @doc(description: "Defines the customer's state or province.") {
    region_code: String @doc(description: "The address region code.")
    region_name: String @doc(description: "The state or province name.")
    region_id: Int @doc(description: "The unique ID for a pre-defined region.")
}

input AddressInput {
    street: [String] @doc(description: "An array of strings that define the company's street address.")
    city: String @doc(description: "The city where the company is registered to conduct business.")
    district: String @doc(description: "The disctrit where the company is registered to conduct business.")
    region: CustomerAddressRegionInput @doc(description: "An object containing region data for the company.")
    country_code: CountryCodeEnum @doc(description: "The country code of the company's legal address.")
    postcode: String @doc(description: "The company's postal code.")
    telephone: String @doc(description: "The company's phone number.")
    sub_district: String @doc(description: "The subdistrict where company is registered to conduct business")
    longitude: String @doc(description: "The longitude data from company address")
    latitude: String @doc(description: "The latitude data from company address")
}

enum CountryCodeEnum @doc(description: "The list of country codes.") {
    AF @doc(description: "Afghanistan")
    AX @doc(description: "Åland Islands")
    AL @doc(description: "Albania")
    DZ @doc(description: "Algeria")
    AS @doc(description: "American Samoa")
    AD @doc(description: "Andorra")
    AO @doc(description: "Angola")
    AI @doc(description: "Anguilla")
    AQ @doc(description: "Antarctica")
    AG @doc(description: "Antigua & Barbuda")
    AR @doc(description: "Argentina")
    AM @doc(description: "Armenia")
    AW @doc(description: "Aruba")
    AU @doc(description: "Australia")
    AT @doc(description: "Austria")
    AZ @doc(description: "Azerbaijan")
    BS @doc(description: "Bahamas")
    BH @doc(description: "Bahrain")
    BD @doc(description: "Bangladesh")
    BB @doc(description: "Barbados")
    BY @doc(description: "Belarus")
    BE @doc(description: "Belgium")
    BZ @doc(description: "Belize")
    BJ @doc(description: "Benin")
    BM @doc(description: "Bermuda")
    BT @doc(description: "Bhutan")
    BO @doc(description: "Bolivia")
    BA @doc(description: "Bosnia & Herzegovina")
    BW @doc(description: "Botswana")
    BV @doc(description: "Bouvet Island")
    BR @doc(description: "Brazil")
    IO @doc(description: "British Indian Ocean Territory")
    VG @doc(description: "British Virgin Islands")
    BN @doc(description: "Brunei")
    BG @doc(description: "Bulgaria")
    BF @doc(description: "Burkina Faso")
    BI @doc(description: "Burundi")
    KH @doc(description: "Cambodia")
    CM @doc(description: "Cameroon")
    CA @doc(description: "Canada")
    CV @doc(description: "Cape Verde")
    KY @doc(description: "Cayman Islands")
    CF @doc(description: "Central African Republic")
    TD @doc(description: "Chad")
    CL @doc(description: "Chile")
    CN @doc(description: "China")
    CX @doc(description: "Christmas Island")
    CC @doc(description: "Cocos (Keeling) Islands")
    CO @doc(description: "Colombia")
    KM @doc(description: "Comoros")
    CG @doc(description: "Congo-Brazzaville")
    CD @doc(description: "Congo-Kinshasa")
    CK @doc(description: "Cook Islands")
    CR @doc(description: "Costa Rica")
    CI @doc(description: "Côte d’Ivoire")
    HR @doc(description: "Croatia")
    CU @doc(description: "Cuba")
    CY @doc(description: "Cyprus")
    CZ @doc(description: "Czech Republic")
    DK @doc(description: "Denmark")
    DJ @doc(description: "Djibouti")
    DM @doc(description: "Dominica")
    DO @doc(description: "Dominican Republic")
    EC @doc(description: "Ecuador")
    EG @doc(description: "Egypt")
    SV @doc(description: "El Salvador")
    GQ @doc(description: "Equatorial Guinea")
    ER @doc(description: "Eritrea")
    EE @doc(description: "Estonia")
    ET @doc(description: "Ethiopia")
    FK @doc(description: "Falkland Islands")
    FO @doc(description: "Faroe Islands")
    FJ @doc(description: "Fiji")
    FI @doc(description: "Finland")
    FR @doc(description: "France")
    GF @doc(description: "French Guiana")
    PF @doc(description: "French Polynesia")
    TF @doc(description: "French Southern Territories")
    GA @doc(description: "Gabon")
    GM @doc(description: "Gambia")
    GE @doc(description: "Georgia")
    DE @doc(description: "Germany")
    GH @doc(description: "Ghana")
    GI @doc(description: "Gibraltar")
    GR @doc(description: "Greece")
    GL @doc(description: "Greenland")
    GD @doc(description: "Grenada")
    GP @doc(description: "Guadeloupe")
    GU @doc(description: "Guam")
    GT @doc(description: "Guatemala")
    GG @doc(description: "Guernsey")
    GN @doc(description: "Guinea")
    GW @doc(description: "Guinea-Bissau")
    GY @doc(description: "Guyana")
    HT @doc(description: "Haiti")
    HM @doc(description: "Heard &amp; McDonald Islands")
    HN @doc(description: "Honduras")
    HK @doc(description: "Hong Kong SAR China")
    HU @doc(description: "Hungary")
    IS @doc(description: "Iceland")
    IN @doc(description: "India")
    ID @doc(description: "Indonesia")
    IR @doc(description: "Iran")
    IQ @doc(description: "Iraq")
    IE @doc(description: "Ireland")
    IM @doc(description: "Isle of Man")
    IL @doc(description: "Israel")
    IT @doc(description: "Italy")
    JM @doc(description: "Jamaica")
    JP @doc(description: "Japan")
    JE @doc(description: "Jersey")
    JO @doc(description: "Jordan")
    KZ @doc(description: "Kazakhstan")
    KE @doc(description: "Kenya")
    KI @doc(description: "Kiribati")
    KW @doc(description: "Kuwait")
    KG @doc(description: "Kyrgyzstan")
    LA @doc(description: "Laos")
    LV @doc(description: "Latvia")
    LB @doc(description: "Lebanon")
    LS @doc(description: "Lesotho")
    LR @doc(description: "Liberia")
    LY @doc(description: "Libya")
    LI @doc(description: "Liechtenstein")
    LT @doc(description: "Lithuania")
    LU @doc(description: "Luxembourg")
    MO @doc(description: "Macau SAR China")
    MK @doc(description: "Macedonia")
    MG @doc(description: "Madagascar")
    MW @doc(description: "Malawi")
    MY @doc(description: "Malaysia")
    MV @doc(description: "Maldives")
    ML @doc(description: "Mali")
    MT @doc(description: "Malta")
    MH @doc(description: "Marshall Islands")
    MQ @doc(description: "Martinique")
    MR @doc(description: "Mauritania")
    MU @doc(description: "Mauritius")
    YT @doc(description: "Mayotte")
    MX @doc(description: "Mexico")
    FM @doc(description: "Micronesia")
    MD @doc(description: "Moldova")
    MC @doc(description: "Monaco")
    MN @doc(description: "Mongolia")
    ME @doc(description: "Montenegro")
    MS @doc(description: "Montserrat")
    MA @doc(description: "Morocco")
    MZ @doc(description: "Mozambique")
    MM @doc(description: "Myanmar (Burma)")
    NA @doc(description: "Namibia")
    NR @doc(description: "Nauru")
    NP @doc(description: "Nepal")
    NL @doc(description: "Netherlands")
    AN @doc(description: "Netherlands Antilles")
    NC @doc(description: "New Caledonia")
    NZ @doc(description: "New Zealand")
    NI @doc(description: "Nicaragua")
    NE @doc(description: "Niger")
    NG @doc(description: "Nigeria")
    NU @doc(description: "Niue")
    NF @doc(description: "Norfolk Island")
    MP @doc(description: "Northern Mariana Islands")
    KP @doc(description: "North Korea")
    NO @doc(description: "Norway")
    OM @doc(description: "Oman")
    PK @doc(description: "Pakistan")
    PW @doc(description: "Palau")
    PS @doc(description: "Palestinian Territories")
    PA @doc(description: "Panama")
    PG @doc(description: "Papua New Guinea")
    PY @doc(description: "Paraguay")
    PE @doc(description: "Peru")
    PH @doc(description: "Philippines")
    PN @doc(description: "Pitcairn Islands")
    PL @doc(description: "Poland")
    PT @doc(description: "Portugal")
    QA @doc(description: "Qatar")
    RE @doc(description: "Réunion")
    RO @doc(description: "Romania")
    RU @doc(description: "Russia")
    RW @doc(description: "Rwanda")
    WS @doc(description: "Samoa")
    SM @doc(description: "San Marino")
    ST @doc(description: "São Tomé & Príncipe")
    SA @doc(description: "Saudi Arabia")
    SN @doc(description: "Senegal")
    RS @doc(description: "Serbia")
    SC @doc(description: "Seychelles")
    SL @doc(description: "Sierra Leone")
    SG @doc(description: "Singapore")
    SK @doc(description: "Slovakia")
    SI @doc(description: "Slovenia")
    SB @doc(description: "Solomon Islands")
    SO @doc(description: "Somalia")
    ZA @doc(description: "South Africa")
    GS @doc(description: "South Georgia & South Sandwich Islands")
    KR @doc(description: "South Korea")
    ES @doc(description: "Spain")
    LK @doc(description: "Sri Lanka")
    BL @doc(description: "St. Barthélemy")
    SH @doc(description: "St. Helena")
    KN @doc(description: "St. Kitts & Nevis")
    LC @doc(description: "St. Lucia")
    MF @doc(description: "St. Martin")
    PM @doc(description: "St. Pierre & Miquelon")
    VC @doc(description: "St. Vincent & Grenadines")
    SD @doc(description: "Sudan")
    SR @doc(description: "Suriname")
    SJ @doc(description: "Svalbard & Jan Mayen")
    SZ @doc(description: "Swaziland")
    SE @doc(description: "Sweden")
    CH @doc(description: "Switzerland")
    SY @doc(description: "Syria")
    TW @doc(description: "Taiwan")
    TJ @doc(description: "Tajikistan")
    TZ @doc(description: "Tanzania")
    TH @doc(description: "Thailand")
    TL @doc(description: "Timor-Leste")
    TG @doc(description: "Togo")
    TK @doc(description: "Tokelau")
    TO @doc(description: "Tonga")
    TT @doc(description: "Trinidad & Tobago")
    TN @doc(description: "Tunisia")
    TR @doc(description: "Turkey")
    TM @doc(description: "Turkmenistan")
    TC @doc(description: "Turks & Caicos Islands")
    TV @doc(description: "Tuvalu")
    UG @doc(description: "Uganda")
    UA @doc(description: "Ukraine")
    AE @doc(description: "United Arab Emirates")
    GB @doc(description: "United Kingdom")
    US @doc(description: "United States")
    UY @doc(description: "Uruguay")
    UM @doc(description: "U.S. Outlying Islands")
    VI @doc(description: "U.S. Virgin Islands")
    UZ @doc(description: "Uzbekistan")
    VU @doc(description: "Vanuatu")
    VA @doc(description: "Vatican City")
    VE @doc(description: "Venezuela")
    VN @doc(description: "Vietnam")
    WF @doc(description: "Wallis & Futuna")
    EH @doc(description: "Western Sahara")
    YE @doc(description: "Yemen")
    ZM @doc(description: "Zambia")
    ZW @doc(description: "Zimbabwe")
}

input CustomerCustomInput {
    business_type: String @doc(description: "Type of business owned.")
    other_business_type: String @doc(description: "Other type of business owned.")
    warung_name: String @doc (description: "Input of warung name.")
    customer_address: [CustomerCustomAddress] @doc(description: "Customer Location")
}

input CustomerCustomAddress {
    province: String @doc(description: "Province")
    county_town: String @doc(description: "City of Province")
}

type Customer {
    business_type: String @doc(description: "Type of business owned.")
    other_business_type: String @doc(description: "Other type of business owned.")
    warung_name: String @doc (description: "Input of warung name.")
    wp_code: String @doc(description: "Type of business owned.") @resolver(class: "Icube\\CustomCustomer\\Model\\Resolver\\GetWpCode") 
}

type BusinessTypeOutput {
	code: String @doc(description: "Code of business.")
	jenis_usaha: String @doc(description: "Type of business.")
}

type RoadAccessOutput {
	code: String @doc(description: "Code of business.")
	value: String @doc(description: "Type of business.")
}

type CheckUserAccountOutput {
    phonenumber: String @doc(description: "Customer telephone.")
    customer_wpcode: String @doc(description: "Customer wp_code.")
}

type CustomerKycOutput {
    status: String @doc(description: "Status update kyc data.")
    message: String @doc(description: "Status detail from update kyc data.")
}